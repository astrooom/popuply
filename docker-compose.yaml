services:

  # --WEBSITE PROD CONTAINER--
  website:
    profiles: [ production ]
    build:
      context: .
      dockerfile: ./Dockerfile
    restart: unless-stopped
    volumes:
    - .:/website
    environment:
      - NEXT_PUBLIC_HOST_NAME=${NEXT_PUBLIC_HOST_NAME}

      # Stripe
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}

      # Database
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT_INTERNAL:-5432}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

      # Emails
      - EMAIL_FROM="Popuply <noreply@popuply.net>"
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}

      # Github SSO
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - GITHUB_CALLBACK_URL=${GITHUB_CALLBACK_URL}

      # BunnyCDN (Image uploads)
      - NEXT_PUBLIC_BUNNYCDN_STORAGE_ZONE=${NEXT_PUBLIC_BUNNYCDN_STORAGE_ZONE}
      - BUNNYCDN_ZONE_API_KEY=${BUNNYCDN_ZONE_API_KEY}
      - BUNNYCDN_ACCOUNT_API_KEY=${BUNNYCDN_ACCOUNT_API_KEY}

      # Stripe
      - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}

    depends_on:
      postgres:
        condition: service_healthy


  # Postgres database
  postgres:
    profiles: [ production, dev ]
    image: postgres:16.4-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data
      PGPORT: ${POSTGRES_PORT_INTERNAL:-5432}
    ports:
      - "${POSTGRES_PORT_EXTERNAL:-64431}:${POSTGRES_PORT_INTERNAL:-5432}"
    volumes:
      - postgres:/var/lib/postgresql/data
    expose: [5432]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U $${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  dbgate:
    profiles: [dev ]
    image: dbgate/dbgate:alpine
    restart: always
    ports:
      - 3100:3000
    environment:
      CONNECTIONS: postgres

      ENGINE_postgres: postgres@dbgate-plugin-postgres
      LABEL_postgres: postgres
      SERVER_postgres: postgres
      PORT_postgres: 5432
      USER_postgres: ${POSTGRES_USER:-postgres}
      PASSWORD_postgres: ${POSTGRES_PASSWORD}
      DATABASE_postgres: ${POSTGRES_DATABASE:-postgres}

volumes:
  postgres:
